<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maps on Boaz Sobrado's Website</title><link>https://boazsobrado.com/categories/maps/</link><description>Recent content in Maps on Boaz Sobrado's Website</description><generator>Hugo</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://www.boazsobrado.com/">Boaz Sobrado&lt;/a></copyright><lastBuildDate>Tue, 29 Aug 2017 17:58:21 +0800</lastBuildDate><atom:link href="https://boazsobrado.com/categories/maps/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing a Kalman filter in R for Android GPS measurements</title><link>https://boazsobrado.com/blog/2017/08/29/implementing-a-kalman-filter-in-r-for-android-gps-measurements/</link><pubDate>Tue, 29 Aug 2017 17:58:21 +0800</pubDate><guid>https://boazsobrado.com/blog/2017/08/29/implementing-a-kalman-filter-in-r-for-android-gps-measurements/</guid><description>The problem I downloaded my data from Google Take-Out and have been playing around with it for my thesis. This is roughly what the data looks like after some pre-processing:
lon lat accuracy 5.115447 52.10574 877 5.115447 52.10574 877 5.113952 52.10451 18 5.115447 52.10574 877 5.115447 52.10574 877 5.115447 52.10574 877 As soon as I looked into it I realised there were some issues with the measurements. They were all over the place!
The circles are the measurements (with their radius representing the accuracy and the center being the point) and lines connect these measurements in time.</description></item><item><title>Using Google Maps API: Mol Bubi Competition</title><link>https://boazsobrado.com/blog/2015/11/05/using-google-maps-api-mol-bubi-competition/</link><pubDate>Thu, 05 Nov 2015 11:36:16 +0100</pubDate><guid>https://boazsobrado.com/blog/2015/11/05/using-google-maps-api-mol-bubi-competition/</guid><description>A few friends and I are involved in the Budapest public bicycle data science competition. As of right now we are in the top ten, although in all honesty, it hasn&amp;rsquo;t really started yet. We signed a non-disclosure agreement, so I cannot really share any cool details. What I can share however, is the function I wrote in R to get calculate the distances and duration of bike trips using Google Maps&amp;rsquo; API.
#distance calucations #### This script uses RCurl and RJSONIO to download data from Google's API library(RCurl) library(RJSONIO) #define api key as: api&amp;lt;-&amp;quot;YOURAPI&amp;quot; #the function assumes address input in following dataframe: #lat1,lng1,lat2,lng2 DistDur &amp;lt;- function(address,time = as.</description></item></channel></rss>